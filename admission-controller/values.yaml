name: lacework-admission-controller

# Configuration
logger:
  debug: true

admission:
  tls_port: 8443
  cert_file_path: "/certs/admission.crt"
  cert_key_path: "/certs/admission.key"
  excluded_resources:
  -
  -

policy:
  block_exec: false
  bypass_scope: "kube-system,kube-public,lacework,lacework-dev"

scanner:
  server: "lacework-proxy-scanner"
  namespace: "lacework"
  skipVerify: true  
  certs:
    # Certificates
    # Set 'useExistingSecret' to use an already existing TLS secret. Note that a CA chain file does need to exist.
    # Alternatively, set to false and populate values, which will create a TLS secret of that name.
    useExistingSecret: true
    name: lacework-admission-certs
    serverCertificate:
    serverKey:
    caCert:
  timeout: 30
  defaultRegistry: index.docker.io
  blockOnError: false

# Kubernetes
nameOverride: "lacework-admission-controller"
fullnameOverride: "lacework-admission-controller"

# [Optional] Kubernetes cluster name
# https://support.lacework.com/hc/en-us/articles/360005263034-Deploy-on-Kubernetes
kubernetesCluster:

serviceAccount:
  name: lacework-admission-sa

webhooks:
  caBundle:
  failurePolicy: Ignore
  timeoutSeconds: 30

podAnnotations: {}
#  my-annotation-key: my value; more value

securityContext:
  runAsUser: 11431
  runAsGroup: 11433
  fsGroup: 11433
container_securityContext: {}

resources: {}
  # requests:
  #   cpu: 250m
  #   memory: 0.2Gi
  # limits:
  #   cpu: 500m
#   memory: 1.5Gi

nodeSelector: {}

deployment:
  image: lacework/lacework-admission-controller
  tag: 0.1.11
  pullPolicy: Always
  replicaCount: 1
  service:
    port: 8443

proxy-scanner:
  fullnameOverride: lacework-proxy-scanner
  enabled: true

  logLevel: "info"

  resources: {}

  config:
    default_registry: index.docker.io
    static_cache_location: /opt/lacework
    scan_public_registries: true
    lacework:
      account_name: 
      integration_access_token: 
    registry_secret_name:
    registries:
      - domain:
        name:
        ssl:
        type:
        auto_poll:
        is_public:
        auth_type:
        auth_header_name: Authorization
        credentials:
          user_name:
          password:
        notification_type:
        poll_frequency_minutes: 20
        disable_non_os_package_scanning: false
        go_binary_scanning:
          enable: false
          scan_directory_path: ""

  certs:
    useExistingSecret: true
    skipCert: true
    name: 
    serverCertificate:
    serverKey:
